{"version":3,"sources":["components/AddCAtegory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAlBgB,SAACP,GACzBQ,QAAQC,MACRX,EAAcE,EAAEU,OAAOJ,Y,uBCPdK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGCI,MAAMF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAMgB,IAAKN,IACrB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAC,GAGHH,EAAS,CACDf,KAAMkB,EACNL,SAAQ,SAItB,CAACpB,IAEIqB,EDfwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,EAAU,uBAAGJ,UAAU,oCAAb,WAA8D,KACzE,yBAAKA,UAAU,aAIHH,EAAOJ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eACQiB,IAAKjB,EAAIC,IACLD,UEuBrBkB,EApCU,WAAQ,IAAD,EACY5C,mBAAS,CAAC,cADtB,mBACjB6C,EADiB,KACL9C,EADK,KAIxB,OACI,oCACI,4BAAM,gBAEN,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEA,4BAEQ8C,EAAWpB,KAAI,SAAAT,GAAQ,OAEnB,kBAAC,EAAD,CACA2B,IAAM3B,EACFA,SAAUA,U,MCpB1C8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.2e4c8254.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) =>{\r\n    console.log();\r\n    setInputValue(e.target.value);\r\n  }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n          \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            \r\n            />\r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const GetGifs = async(category) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=wh0c0qMAxuqJ3ltRHT9Htos3EcHOY0kW`\r\n    const resp =  await fetch(url);\r\n    const {data} = await resp.json()\r\n    const gifs = data.map( img => {\r\n        return  {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    }) \r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url } alt={title}/>\r\n            <p>{title}</p>\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n   \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading ? <p className=\"animate__animated animate__flash\">loading</p> : null}\r\n            <div className=\"card-grid\">\r\n            \r\n        \r\n                {\r\n                        images.map((img) => (\r\n                        <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                        />\r\n                            \r\n                        ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { GetGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        GetGifs(category)\r\n        .then( imgs => {\r\n           \r\n        \r\n            setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n      \r\n        } );\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCAtegory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n\r\n//const categories =['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const GifExpertApp = ( ) => {    \r\n        const [categories, setCategories] = useState(['One Punch']);\r\n      \r\n\r\n        return (\r\n            <>\r\n                <h2>{ 'GifExpertApp' }</h2>\r\n                \r\n                <AddCategory setCategories={setCategories}></AddCategory>\r\n                \r\n                <hr></hr>\r\n            \r\n                <ol>\r\n                    {\r\n                        categories.map(category => ( \r\n                       \r\n                            <GifGrid\r\n                            key= {category}\r\n                                category={category}\r\n                            />\r\n                       ))\r\n                    }\r\n                </ol>\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    // GifExpertApp.propTypes = {\r\n    //     //saludo: PropTypes.string.isRequired\r\n    // }\r\n    \r\n    // GifExpertApp.defaultProps = {\r\n      \r\n    // }\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//"],"sourceRoot":""}